{"ast":null,"code":"var _jsxFileName = \"/Users/sakshi/GeekieshPixel Workspace/music-player-ui/music-player-ui/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = ({\n  songId\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [song, setSong] = useState({});\n  const [audioUrl, setAudioUrl] = useState(null);\n  useEffect(() => {\n    const fetchAudioUrl = async () => {\n      try {\n        const songDataRes = await axios.get(song.id);\n        const songData = songDataRes.data;\n        setSong(songData);\n        const response = await axios.get(song.url, {\n          responseType: 'arraybuffer' // Important to get the raw binary data\n        });\n        const blob = new Blob([response.data], {\n          type: 'audio/mpeg'\n        }); // Create a Blob from the data\n        const url = window.URL.createObjectURL(blob); // Generate a URL for the Blob\n        console.clear();\n        console.log(blob, \"hhhhh\");\n        setAudioUrl(url);\n      } catch (error) {\n        console.error('Error fetching the audio file:', error);\n      }\n    };\n    fetchAudioUrl();\n  }, [song.id]);\n  useEffect(() => {\n    if (audioRef.current && audioUrl) {\n      audioRef.current.load();\n      if (isPlaying) {\n        audioRef.current.play();\n      }\n    }\n  }, [audioUrl]);\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const currentTime = audioRef.current.currentTime;\n      const duration = audioRef.current.duration;\n      setProgress(currentTime / duration * 100);\n    }\n  };\n  const handleSeek = e => {\n    const seekTime = e.target.value / 100 * audioRef.current.duration;\n    audioRef.current.currentTime = seekTime;\n  };\n\n  // return (\n  // \t<div className=\"player\">\n  // \t\t{audioUrl ? (\n  // \t\t\t<>\n  // \t\t\t\t<audio\n  // \t\t\t\t\tref={audioRef}\n  // \t\t\t\t\tonTimeUpdate={handleTimeUpdate}\n  // \t\t\t\t>\n  // \t\t\t\t\t<source src={audioUrl} type=\"audio/mpeg\" />\n  // \t\t\t\t\tYour browser does not support the audio element.\n  // \t\t\t\t</audio>\n  // \t\t\t\t<div className=\"player-controls\">\n  // \t\t\t\t\t<button onClick={togglePlayPause}>\n  // \t\t\t\t\t\t{isPlaying ? 'Pause' : 'Play'}\n  // \t\t\t\t\t</button>\n  // \t\t\t\t\t<input\n  // \t\t\t\t\t\ttype=\"range\"\n  // \t\t\t\t\t\tvalue={progress}\n  // \t\t\t\t\t\tonChange={handleSeek}\n  // \t\t\t\t\t\tclassName=\"seeker\"\n  // \t\t\t\t\t/>\n  // \t\t\t\t</div>\n  // \t\t\t\t<div className=\"song-info\">\n\n  // \t\t\t\t\t<p>{song.name}</p>\n  // \t\t\t\t\t<p>{song.artist}</p>\n  // \t\t\t\t</div>\n  // \t\t\t</>\n  // \t\t) : (\n  // \t\t\t<p>Loading...</p>\n  // \t\t)}\n  // \t</div>\n\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [song.cover && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://cms.samespace.com/assets/${song.cover}`,\n      alt: \"Album Cover\",\n      className: \"album-cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: progress,\n        onChange: handleSeek,\n        className: \"seeker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onTimeUpdate: handleTimeUpdate,\n      onEnded: () => setIsPlaying(false),\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: audioUrl,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, this);\n};\n_s(Player, \"K22+qCj8l9S5vDLC9TZ7VZFGS0g=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useRef","useEffect","useState","axios","jsxDEV","_jsxDEV","Player","songId","_s","audioRef","isPlaying","setIsPlaying","progress","setProgress","song","setSong","audioUrl","setAudioUrl","fetchAudioUrl","songDataRes","get","id","songData","data","response","url","responseType","blob","Blob","type","window","URL","createObjectURL","console","clear","log","error","current","load","play","togglePlayPause","pause","handleTimeUpdate","currentTime","duration","handleSeek","e","seekTime","target","value","className","children","cover","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","artist","onClick","onChange","ref","onTimeUpdate","onEnded","_c","$RefreshReg$"],"sources":["/Users/sakshi/GeekieshPixel Workspace/music-player-ui/music-player-ui/src/components/Player.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Player = ({ songId }) => {\n\tconst audioRef = useRef(null);\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [progress, setProgress] = useState(0);\n\tconst [song, setSong] = useState({});\n\tconst [audioUrl, setAudioUrl] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst fetchAudioUrl = async () => {\n\t\t\ttry {\n\n\t\t\t\tconst songDataRes = await axios.get(song.id);\n\t\t\t\tconst songData = songDataRes.data;\n\t\t\t\tsetSong(songData);\n\n\t\t\t\tconst response = await axios.get(song.url, {\n\t\t\t\t\tresponseType: 'arraybuffer', // Important to get the raw binary data\n\t\t\t\t});\n\n\t\t\t\tconst blob = new Blob([response.data], { type: 'audio/mpeg' }); // Create a Blob from the data\n\t\t\t\tconst url = window.URL.createObjectURL(blob); // Generate a URL for the Blob\n\t\t\t\tconsole.clear();\n\t\t\t\tconsole.log(blob, \"hhhhh\");\n\t\t\t\tsetAudioUrl(url);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error fetching the audio file:', error);\n\t\t\t}\n\t\t};\n\n\t\tfetchAudioUrl();\n\t}, [song.id]);\n\n\tuseEffect(() => {\n\t\tif (audioRef.current && audioUrl) {\n\t\t\taudioRef.current.load();\n\t\t\tif (isPlaying) {\n\t\t\t\taudioRef.current.play();\n\t\t\t}\n\t\t}\n\t}, [audioUrl]);\n\n\tconst togglePlayPause = () => {\n\t\tif (isPlaying) {\n\t\t\taudioRef.current.pause();\n\t\t} else {\n\t\t\taudioRef.current.play();\n\t\t}\n\t\tsetIsPlaying(!isPlaying);\n\t};\n\n\tconst handleTimeUpdate = () => {\n\t\tif (audioRef.current) {\n\t\t\tconst currentTime = audioRef.current.currentTime;\n\t\t\tconst duration = audioRef.current.duration;\n\t\t\tsetProgress((currentTime / duration) * 100);\n\t\t}\n\t};\n\n\tconst handleSeek = (e) => {\n\t\tconst seekTime = (e.target.value / 100) * audioRef.current.duration;\n\t\taudioRef.current.currentTime = seekTime;\n\t};\n\n\n\t// return (\n\t// \t<div className=\"player\">\n\t// \t\t{audioUrl ? (\n\t// \t\t\t<>\n\t// \t\t\t\t<audio\n\t// \t\t\t\t\tref={audioRef}\n\t// \t\t\t\t\tonTimeUpdate={handleTimeUpdate}\n\t// \t\t\t\t>\n\t// \t\t\t\t\t<source src={audioUrl} type=\"audio/mpeg\" />\n\t// \t\t\t\t\tYour browser does not support the audio element.\n\t// \t\t\t\t</audio>\n\t// \t\t\t\t<div className=\"player-controls\">\n\t// \t\t\t\t\t<button onClick={togglePlayPause}>\n\t// \t\t\t\t\t\t{isPlaying ? 'Pause' : 'Play'}\n\t// \t\t\t\t\t</button>\n\t// \t\t\t\t\t<input\n\t// \t\t\t\t\t\ttype=\"range\"\n\t// \t\t\t\t\t\tvalue={progress}\n\t// \t\t\t\t\t\tonChange={handleSeek}\n\t// \t\t\t\t\t\tclassName=\"seeker\"\n\t// \t\t\t\t\t/>\n\t// \t\t\t\t</div>\n\t// \t\t\t\t<div className=\"song-info\">\n\n\t// \t\t\t\t\t<p>{song.name}</p>\n\t// \t\t\t\t\t<p>{song.artist}</p>\n\t// \t\t\t\t</div>\n\t// \t\t\t</>\n\t// \t\t) : (\n\t// \t\t\t<p>Loading...</p>\n\t// \t\t)}\n\t// \t</div>\n\n\n\t// );\n\n\treturn (\n\t\t<div className=\"player\">\n\t\t\t{song.cover && (\n\t\t\t\t<img src={`https://cms.samespace.com/assets/${song.cover}`} alt=\"Album Cover\" className=\"album-cover\" />\n\t\t\t)}\n\t\t\t<div className=\"song-info\">\n\t\t\t\t<p>{song.name}</p>\n\t\t\t\t<p>{song.artist}</p>\n\t\t\t</div>\n\t\t\t<div className=\"player-controls\">\n\t\t\t\t<button onClick={togglePlayPause}>\n\t\t\t\t\t{isPlaying ? 'Pause' : 'Play'}\n\t\t\t\t</button>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"range\"\n\t\t\t\t\tvalue={progress}\n\t\t\t\t\tonChange={handleSeek}\n\t\t\t\t\tclassName=\"seeker\"\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<audio\n\t\t\t\tref={audioRef}\n\t\t\t\tonTimeUpdate={handleTimeUpdate}\n\t\t\t\tonEnded={() => setIsPlaying(false)}>\n\t\t\t\t<source src={audioUrl} type=\"audio/mpeg\" />\n\t\t\t\tYour browser does not support the audio element.\n\t\t\t</audio>\n\t\t</div>\n\t);\n};\n\nexport default Player;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}