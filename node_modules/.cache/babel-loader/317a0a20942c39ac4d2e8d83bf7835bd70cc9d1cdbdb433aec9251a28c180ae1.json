{"ast":null,"code":"var _jsxFileName = \"/Users/sakshi/GeekieshPixel Workspace/music-player-ui/music-player-ui/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsis, faVolumeHigh, faCirclePlay, faCirclePause, faBackward, faForward, faVolumeMute } from '@fortawesome/free-solid-svg-icons';\nimport './Player.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Player = ({\n  playlist\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const [volume, setVolume] = useState(0.5); // Initial volume at 50%\n  const [isMuted, setIsMuted] = useState(false); // Mute state\n  const [currentSongIndex, setCurrentSongIndex] = useState(0); // Current song index\n\n  // Check if playlist is defined and has songs, otherwise return null or some fallback UI\n  if (!playlist || playlist.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No songs available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 16\n    }, this);\n  }\n  const currentSong = playlist[currentSongIndex];\n  useEffect(() => {\n    const fetchAudioUrl = async () => {\n      try {\n        const response = await axios.get(currentSong.url, {\n          responseType: 'arraybuffer' // Important to get the raw binary data\n        });\n        const blob = new Blob([response.data], {\n          type: 'audio/mpeg'\n        }); // Create a Blob from the data\n        const url = window.URL.createObjectURL(blob); // Generate a URL for the Blob\n        console.clear();\n        console.log(blob, \"Audio Blob Loaded\");\n        setAudioUrl(url);\n      } catch (error) {\n        console.error('Error fetching the audio file:', error);\n      }\n    };\n    fetchAudioUrl();\n  }, [currentSong.url]);\n  useEffect(() => {\n    if (audioRef.current) {\n      audioRef.current.volume = isMuted ? 0 : volume;\n    }\n  }, [volume, isMuted]);\n  useEffect(() => {\n    if (audioRef.current && audioUrl) {\n      audioRef.current.load();\n      if (isPlaying) {\n        audioRef.current.play();\n      }\n    }\n  }, [audioUrl, isPlaying]);\n  const handleBackward = () => {\n    setCurrentSongIndex(prevIndex => prevIndex === 0 ? playlist.length - 1 : prevIndex - 1);\n    setIsPlaying(true);\n  };\n  const handleForward = () => {\n    setCurrentSongIndex(prevIndex => prevIndex === playlist.length - 1 ? 0 : prevIndex + 1);\n    setIsPlaying(true);\n  };\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const currentTime = audioRef.current.currentTime;\n      const duration = audioRef.current.duration;\n      setProgress(currentTime / duration * 100);\n    }\n  };\n  const handleSeek = e => {\n    const seekTime = e.target.value / 100 * audioRef.current.duration;\n    audioRef.current.currentTime = seekTime;\n  };\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: audioUrl ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        onTimeUpdate: handleTimeUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: audioUrl,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), \"Your browser does not support the audio element.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"song-title\",\n            children: currentSong.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"song-artist\",\n            children: currentSong.artist\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://cms.samespace.com/assets/${currentSong.cover}`,\n            alt: currentSong.name,\n            className: \"cover\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          value: progress,\n          onChange: handleSeek,\n          className: \"seeker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faEllipsis\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"center-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: handleBackward,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faBackward\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: togglePlayPause,\n              className: \"btn play-pause-btn\",\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: isPlaying ? faCirclePause : faCirclePlay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              onClick: handleForward,\n              children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                icon: faForward\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn\",\n            onClick: toggleMute,\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: isMuted ? faVolumeMute : faVolumeHigh\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n};\n_s(Player, \"7ZJKdfH2CSJboZgnnc5rjwunbDQ=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useRef","useEffect","useState","axios","FontAwesomeIcon","faEllipsis","faVolumeHigh","faCirclePlay","faCirclePause","faBackward","faForward","faVolumeMute","jsxDEV","_jsxDEV","Fragment","_Fragment","Player","playlist","_s","audioRef","isPlaying","setIsPlaying","progress","setProgress","audioUrl","setAudioUrl","volume","setVolume","isMuted","setIsMuted","currentSongIndex","setCurrentSongIndex","length","children","fileName","_jsxFileName","lineNumber","columnNumber","currentSong","fetchAudioUrl","response","get","url","responseType","blob","Blob","data","type","window","URL","createObjectURL","console","clear","log","error","current","load","play","handleBackward","prevIndex","handleForward","togglePlayPause","pause","handleTimeUpdate","currentTime","duration","handleSeek","e","seekTime","target","value","toggleMute","className","ref","onTimeUpdate","src","name","artist","cover","alt","onChange","icon","onClick","_c","$RefreshReg$"],"sources":["/Users/sakshi/GeekieshPixel Workspace/music-player-ui/music-player-ui/src/components/Player.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEllipsis, faVolumeHigh, faCirclePlay, faCirclePause, faBackward, faForward, faVolumeMute } from '@fortawesome/free-solid-svg-icons';\nimport './Player.css';\n\nconst Player = ({ playlist }) => {\n    const audioRef = useRef(null);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [progress, setProgress] = useState(0);\n    const [audioUrl, setAudioUrl] = useState(null);\n    const [volume, setVolume] = useState(0.5); // Initial volume at 50%\n    const [isMuted, setIsMuted] = useState(false); // Mute state\n    const [currentSongIndex, setCurrentSongIndex] = useState(0); // Current song index\n\n    // Check if playlist is defined and has songs, otherwise return null or some fallback UI\n    if (!playlist || playlist.length === 0) {\n        return <p>No songs available.</p>;\n    }\n\n    const currentSong = playlist[currentSongIndex];\n\n    useEffect(() => {\n        const fetchAudioUrl = async () => {\n            try {\n                const response = await axios.get(currentSong.url, {\n                    responseType: 'arraybuffer', // Important to get the raw binary data\n                });\n\n                const blob = new Blob([response.data], { type: 'audio/mpeg' }); // Create a Blob from the data\n                const url = window.URL.createObjectURL(blob); // Generate a URL for the Blob\n                console.clear();\n                console.log(blob, \"Audio Blob Loaded\");\n                setAudioUrl(url);\n            } catch (error) {\n                console.error('Error fetching the audio file:', error);\n            }\n        };\n\n        fetchAudioUrl();\n    }, [currentSong.url]);\n\n    useEffect(() => {\n        if (audioRef.current) {\n            audioRef.current.volume = isMuted ? 0 : volume;\n        }\n    }, [volume, isMuted]);\n\n    useEffect(() => {\n        if (audioRef.current && audioUrl) {\n            audioRef.current.load();\n            if (isPlaying) {\n                audioRef.current.play();\n            }\n        }\n    }, [audioUrl, isPlaying]);\n\n    const handleBackward = () => {\n        setCurrentSongIndex((prevIndex) =>\n            prevIndex === 0 ? playlist.length - 1 : prevIndex - 1\n        );\n        setIsPlaying(true);\n    };\n\n    const handleForward = () => {\n        setCurrentSongIndex((prevIndex) =>\n            prevIndex === playlist.length - 1 ? 0 : prevIndex + 1\n        );\n        setIsPlaying(true);\n    };\n\n    const togglePlayPause = () => {\n        if (isPlaying) {\n            audioRef.current.pause();\n        } else {\n            audioRef.current.play();\n        }\n        setIsPlaying(!isPlaying);\n    };\n\n    const handleTimeUpdate = () => {\n        if (audioRef.current) {\n            const currentTime = audioRef.current.currentTime;\n            const duration = audioRef.current.duration;\n            setProgress((currentTime / duration) * 100);\n        }\n    };\n\n    const handleSeek = (e) => {\n        const seekTime = (e.target.value / 100) * audioRef.current.duration;\n        audioRef.current.currentTime = seekTime;\n    };\n\n    const toggleMute = () => {\n        setIsMuted(!isMuted);\n    };\n\n    return (\n        <div className=\"player\">\n            {audioUrl ? (\n                <>\n                    <audio\n                        ref={audioRef}\n                        onTimeUpdate={handleTimeUpdate}\n                    >\n                        <source src={audioUrl} type=\"audio/mpeg\" />\n                        Your browser does not support the audio element.\n                    </audio>\n                    <div className=\"player-controls\">\n                        <div className=\"song-info\">\n                            <p className=\"song-title\">{currentSong.name}</p>\n                            <p className=\"song-artist\">{currentSong.artist}</p>\n                            <img src={`https://cms.samespace.com/assets/${currentSong.cover}`} alt={currentSong.name} className=\"cover\" />\n                        </div>\n                        <input\n                            type=\"range\"\n                            value={progress}\n                            onChange={handleSeek}\n                            className=\"seeker\"\n                        />\n                        <br />\n\n                        <div className=\"action-buttons\">\n                            <button className=\"btn\">\n                                <FontAwesomeIcon icon={faEllipsis} />\n                            </button>\n                            <div className=\"center-actions\">\n                                <button className=\"btn\" onClick={handleBackward}>\n                                    <FontAwesomeIcon icon={faBackward} />\n                                </button>\n                                <button onClick={togglePlayPause} className=\"btn play-pause-btn\">\n                                    <FontAwesomeIcon icon={isPlaying ? faCirclePause : faCirclePlay} />\n                                </button>\n                                <button className=\"btn\" onClick={handleForward}>\n                                    <FontAwesomeIcon icon={faForward} />\n                                </button>\n                            </div>\n                            <button className=\"btn\" onClick={toggleMute}>\n                                <FontAwesomeIcon icon={isMuted ? faVolumeMute : faVolumeHigh} />\n                            </button>\n                        </div>\n                    </div>\n                </>\n            ) : (\n                <p>Loading...</p>\n            )}\n        </div>\n    );\n};\n\nexport default Player;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}