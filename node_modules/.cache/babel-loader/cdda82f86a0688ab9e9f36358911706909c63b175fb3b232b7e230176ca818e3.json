{"ast":null,"code":"var _jsxFileName = \"/Users/sakshi/GeekieshPixel Workspace/music-player-ui/music-player-ui/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Player.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = ({\n  songId\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [song, setSong] = useState({});\n  const [audioUrl, setAudioUrl] = useState(null);\n  useEffect(() => {\n    // Fetch song data including the cover image\n    const fetchSongData = async () => {\n      try {\n        const response = await axios.get(`https://cms.samespace.com/items/songs/${songId}`);\n        const songData = response.data;\n        setSong(songData);\n\n        // Construct the audio URL\n        const audioResponse = await axios.get(`https://cms.samespace.com/assets/${songData.audio}`, {\n          responseType: 'arraybuffer'\n        });\n        const blob = new Blob([audioResponse.data], {\n          type: 'audio/mpeg'\n        });\n        const url = window.URL.createObjectURL(blob);\n        setAudioUrl(url);\n      } catch (error) {\n        console.error('Error fetching the song data:', error);\n      }\n    };\n    fetchSongData();\n  }, [songId]);\n  useEffect(() => {\n    if (audioRef.current && audioUrl) {\n      audioRef.current.load();\n      if (isPlaying) {\n        audioRef.current.play();\n      }\n    }\n  }, [audioUrl]);\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const currentTime = audioRef.current.currentTime;\n      const duration = audioRef.current.duration;\n      setProgress(currentTime / duration * 100);\n    }\n  };\n  const handleSeek = e => {\n    const seekTime = e.target.value / 100 * audioRef.current.duration;\n    audioRef.current.currentTime = seekTime;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [song.cover && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://cms.samespace.com/assets/${song.cover}`,\n      alt: \"Album Cover\",\n      className: \"album-cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: progress,\n        onChange: handleSeek,\n        className: \"seeker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onTimeUpdate: handleTimeUpdate,\n      onEnded: () => setIsPlaying(false),\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: audioUrl,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"K22+qCj8l9S5vDLC9TZ7VZFGS0g=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useRef","useEffect","useState","axios","jsxDEV","_jsxDEV","Player","songId","_s","audioRef","isPlaying","setIsPlaying","progress","setProgress","song","setSong","audioUrl","setAudioUrl","fetchSongData","response","get","songData","data","audioResponse","audio","responseType","blob","Blob","type","url","window","URL","createObjectURL","error","console","current","load","play","togglePlayPause","pause","handleTimeUpdate","currentTime","duration","handleSeek","e","seekTime","target","value","className","children","cover","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","title","artist","onClick","onChange","ref","onTimeUpdate","onEnded","_c","$RefreshReg$"],"sources":["/Users/sakshi/GeekieshPixel Workspace/music-player-ui/music-player-ui/src/components/Player.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Player.css';\n\nconst Player = ({ songId }) => {\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [song, setSong] = useState({});\n  const [audioUrl, setAudioUrl] = useState(null);\n\n  useEffect(() => {\n    // Fetch song data including the cover image\n    const fetchSongData = async () => {\n      try {\n        const response = await axios.get(`https://cms.samespace.com/items/songs/${songId}`);\n        const songData = response.data;\n        setSong(songData);\n\n        // Construct the audio URL\n        const audioResponse = await axios.get(`https://cms.samespace.com/assets/${songData.audio}`, {\n          responseType: 'arraybuffer',\n        });\n        const blob = new Blob([audioResponse.data], { type: 'audio/mpeg' });\n        const url = window.URL.createObjectURL(blob);\n        setAudioUrl(url);\n      } catch (error) {\n        console.error('Error fetching the song data:', error);\n      }\n    };\n\n    fetchSongData();\n  }, [songId]);\n\n  useEffect(() => {\n    if (audioRef.current && audioUrl) {\n      audioRef.current.load();\n      if (isPlaying) {\n        audioRef.current.play();\n      }\n    }\n  }, [audioUrl]);\n\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const currentTime = audioRef.current.currentTime;\n      const duration = audioRef.current.duration;\n      setProgress((currentTime / duration) * 100);\n    }\n  };\n\n  const handleSeek = (e) => {\n    const seekTime = (e.target.value / 100) * audioRef.current.duration;\n    audioRef.current.currentTime = seekTime;\n  };\n\n  return (\n    <div className=\"player\">\n      {song.cover && (\n        <img src={`https://cms.samespace.com/assets/${song.cover}`} alt=\"Album Cover\" className=\"album-cover\" />\n      )}\n      <div className=\"song-info\">\n        <p>{song.title}</p>\n        <p>{song.artist}</p>\n      </div>\n      <div className=\"player-controls\">\n        <button onClick={togglePlayPause}>\n          {isPlaying ? 'Pause' : 'Play'}\n        </button>\n        <input \n          type=\"range\" \n          value={progress} \n          onChange={handleSeek} \n          className=\"seeker\" \n        />\n      </div>\n      <audio \n        ref={audioRef} \n        onTimeUpdate={handleTimeUpdate} \n        onEnded={() => setIsPlaying(false)}>\n        <source src={audioUrl} type=\"audio/mpeg\" />\n        Your browser does not support the audio element.\n      </audio>\n    </div>\n  );\n};\n\nexport default Player;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}