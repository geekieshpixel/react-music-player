{"ast":null,"code":"var _jsxFileName = \"/Users/sakshi/GeekieshPixel Workspace/music-player-ui/music-player-ui/src/components/Player.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect } from 'react';\n// import './Player.css';\n// import axios from 'axios';\n\n// const Player = ({ song }) => {\n//   useEffect(() => {\n//     const gradientColors = extractColorsFromImage(`https://cms.samespace.com/assets/${song.cover}`);\n//     document.body.style.background = `linear-gradient(to bottom, ${gradientColors})`;\n//   }, [song]);\n\n//   const extractColorsFromImage = (imageUrl) => {\n//     // This function can be more advanced using a library to extract colors\n//     return ['#ff7e5f', '#feb47b']; // placeholder colors\n//   };\n\n//   useEffect(() => {\n//     const fetchSpecificSong = async () => {\n//       try {\n//         const response = await axios.get(song.url);\n//         console.log(response);\n//       } catch (error) {\n//         console.error('Error fetching songs:', error);\n//       }\n//     };\n\n//     fetchSpecificSong();\n//   }, []);\n\n//   return (\n//     <div className=\"player\">\n//       <img src={`https://cms.samespace.com/assets/${song.cover}`} alt={song.name} className=\"cover\" />\n//       <div className=\"details\">\n//         <h2>{song.name}</h2>\n//         <h3>{song.artist}</h3>\n//       </div>\n//       <div className=\"controls\">\n//         <button>Previous</button>\n//         <button>Play/Pause</button>\n//         <button>Next</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Player;\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = ({\n  song\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  useEffect(() => {\n    if (audioRef.current) {\n      // If there's a change in the song, load and play it automatically\n      audioRef.current.load();\n      if (isPlaying) {\n        audioRef.current.play();\n      }\n    }\n  }, [song]);\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const currentTime = audioRef.current.currentTime;\n      const duration = audioRef.current.duration;\n      setProgress(currentTime / duration * 100);\n    }\n  };\n  const handleSeek = e => {\n    const seekTime = e.target.value / 100 * audioRef.current.duration;\n    audioRef.current.currentTime = seekTime;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onTimeUpdate: handleTimeUpdate,\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: `https://cms.samespace.com/assets/${song.audio}`,\n        type: \"audio/mp3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: progress,\n        onChange: handleSeek,\n        className: \"seeker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"AYrRwab+kNNORpNXnqu23B2+mlw=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useRef","useEffect","useState","jsxDEV","_jsxDEV","Player","song","_s","audioRef","isPlaying","setIsPlaying","progress","setProgress","current","load","play","togglePlayPause","pause","handleTimeUpdate","currentTime","duration","handleSeek","e","seekTime","target","value","className","children","ref","onTimeUpdate","src","audio","type","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onChange","title","artist","_c","$RefreshReg$"],"sources":["/Users/sakshi/GeekieshPixel Workspace/music-player-ui/music-player-ui/src/components/Player.js"],"sourcesContent":["// import React, { useEffect } from 'react';\n// import './Player.css';\n// import axios from 'axios';\n\n// const Player = ({ song }) => {\n//   useEffect(() => {\n//     const gradientColors = extractColorsFromImage(`https://cms.samespace.com/assets/${song.cover}`);\n//     document.body.style.background = `linear-gradient(to bottom, ${gradientColors})`;\n//   }, [song]);\n\n//   const extractColorsFromImage = (imageUrl) => {\n//     // This function can be more advanced using a library to extract colors\n//     return ['#ff7e5f', '#feb47b']; // placeholder colors\n//   };\n\n//   useEffect(() => {\n//     const fetchSpecificSong = async () => {\n//       try {\n//         const response = await axios.get(song.url);\n//         console.log(response);\n//       } catch (error) {\n//         console.error('Error fetching songs:', error);\n//       }\n//     };\n\n//     fetchSpecificSong();\n//   }, []);\n\n//   return (\n//     <div className=\"player\">\n//       <img src={`https://cms.samespace.com/assets/${song.cover}`} alt={song.name} className=\"cover\" />\n//       <div className=\"details\">\n//         <h2>{song.name}</h2>\n//         <h3>{song.artist}</h3>\n//       </div>\n//       <div className=\"controls\">\n//         <button>Previous</button>\n//         <button>Play/Pause</button>\n//         <button>Next</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Player;\n\nimport React, { useRef, useEffect, useState } from 'react';\n\nconst Player = ({ song }) => {\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n\n  useEffect(() => {\n    if (audioRef.current) {\n      // If there's a change in the song, load and play it automatically\n      audioRef.current.load();\n      if (isPlaying) {\n        audioRef.current.play();\n      }\n    }\n  }, [song]);\n\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const currentTime = audioRef.current.currentTime;\n      const duration = audioRef.current.duration;\n      setProgress((currentTime / duration) * 100);\n    }\n  };\n\n  const handleSeek = (e) => {\n    const seekTime = (e.target.value / 100) * audioRef.current.duration;\n    audioRef.current.currentTime = seekTime;\n  };\n\n  return (\n    <div className=\"player\">\n      <audio\n        ref={audioRef}\n        onTimeUpdate={handleTimeUpdate}\n      >\n        <source src={`https://cms.samespace.com/assets/${song.audio}`} type=\"audio/mp3\" />\n        Your browser does not support the audio element.\n      </audio>\n      <div className=\"player-controls\">\n        <button onClick={togglePlayPause}>\n          {isPlaying ? 'Pause' : 'Play'}\n        </button>\n        <input\n          type=\"range\"\n          value={progress}\n          onChange={handleSeek}\n          className=\"seeker\"\n        />\n      </div>\n      <div className=\"song-info\">\n        <p>{song.title}</p>\n        <p>{song.artist}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,MAAM,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAE3CD,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,CAACK,OAAO,EAAE;MACpB;MACAL,QAAQ,CAACK,OAAO,CAACC,IAAI,CAAC,CAAC;MACvB,IAAIL,SAAS,EAAE;QACbD,QAAQ,CAACK,OAAO,CAACE,IAAI,CAAC,CAAC;MACzB;IACF;EACF,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEV,MAAMU,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIP,SAAS,EAAE;MACbD,QAAQ,CAACK,OAAO,CAACI,KAAK,CAAC,CAAC;IAC1B,CAAC,MAAM;MACLT,QAAQ,CAACK,OAAO,CAACE,IAAI,CAAC,CAAC;IACzB;IACAL,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMS,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,IAAIV,QAAQ,CAACK,OAAO,EAAE;MACpB,MAAMM,WAAW,GAAGX,QAAQ,CAACK,OAAO,CAACM,WAAW;MAChD,MAAMC,QAAQ,GAAGZ,QAAQ,CAACK,OAAO,CAACO,QAAQ;MAC1CR,WAAW,CAAEO,WAAW,GAAGC,QAAQ,GAAI,GAAG,CAAC;IAC7C;EACF,CAAC;EAED,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACxB,MAAMC,QAAQ,GAAID,CAAC,CAACE,MAAM,CAACC,KAAK,GAAG,GAAG,GAAIjB,QAAQ,CAACK,OAAO,CAACO,QAAQ;IACnEZ,QAAQ,CAACK,OAAO,CAACM,WAAW,GAAGI,QAAQ;EACzC,CAAC;EAED,oBACEnB,OAAA;IAAKsB,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBvB,OAAA;MACEwB,GAAG,EAAEpB,QAAS;MACdqB,YAAY,EAAEX,gBAAiB;MAAAS,QAAA,gBAE/BvB,OAAA;QAAQ0B,GAAG,EAAE,oCAAoCxB,IAAI,CAACyB,KAAK,EAAG;QAACC,IAAI,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,oDAEpF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eACRhC,OAAA;MAAKsB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BvB,OAAA;QAAQiC,OAAO,EAAErB,eAAgB;QAAAW,QAAA,EAC9BlB,SAAS,GAAG,OAAO,GAAG;MAAM;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACThC,OAAA;QACE4B,IAAI,EAAC,OAAO;QACZP,KAAK,EAAEd,QAAS;QAChB2B,QAAQ,EAAEjB,UAAW;QACrBK,SAAS,EAAC;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNhC,OAAA;MAAKsB,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACxBvB,OAAA;QAAAuB,QAAA,EAAIrB,IAAI,CAACiC;MAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBhC,OAAA;QAAAuB,QAAA,EAAIrB,IAAI,CAACkC;MAAM;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA/DIF,MAAM;AAAAoC,EAAA,GAANpC,MAAM;AAiEZ,eAAeA,MAAM;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}