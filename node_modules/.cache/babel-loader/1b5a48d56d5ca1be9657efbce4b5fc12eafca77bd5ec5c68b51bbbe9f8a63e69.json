{"ast":null,"code":"var _jsxFileName = \"/Users/sakshi/GeekieshPixel Workspace/music-player-ui/music-player-ui/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Player.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Player = ({\n  songId\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [song, setSong] = useState(null);\n  useEffect(() => {\n    // Fetch song data including the cover image\n    const fetchSongData = async () => {\n      try {\n        const response = await axios.get(`https://cms.samespace.com/items/songs/${songId}`);\n        setSong(response.data);\n      } catch (error) {\n        console.error('Error fetching the song data:', error);\n      }\n    };\n    fetchSongData();\n  }, [songId]);\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleTimeUpdate = () => {\n    const currentTime = audioRef.current.currentTime;\n    const duration = audioRef.current.duration;\n    setProgress(currentTime / duration * 100);\n  };\n  const handleSeek = e => {\n    const seekTime = e.target.value / 100 * audioRef.current.duration;\n    audioRef.current.currentTime = seekTime;\n  };\n  if (!song) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: `https://cms.samespace.com/assets/${song.cover}`,\n      alt: \"Album Cover\",\n      className: \"album-cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: togglePlayPause,\n        children: isPlaying ? 'Pause' : 'Play'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        value: progress,\n        onChange: handleSeek,\n        className: \"seeker\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      onTimeUpdate: handleTimeUpdate,\n      onEnded: () => setIsPlaying(false),\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: `https://cms.samespace.com/assets/${song.audio}`,\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(Player, \"cSC2V5qVFo0feukhSwX9v2u5Djo=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useRef","useEffect","useState","axios","jsxDEV","_jsxDEV","Player","songId","_s","audioRef","isPlaying","setIsPlaying","progress","setProgress","song","setSong","fetchSongData","response","get","data","error","console","togglePlayPause","current","pause","play","handleTimeUpdate","currentTime","duration","handleSeek","e","seekTime","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","cover","alt","title","artist","onClick","type","onChange","ref","onTimeUpdate","onEnded","audio","_c","$RefreshReg$"],"sources":["/Users/sakshi/GeekieshPixel Workspace/music-player-ui/music-player-ui/src/components/Player.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Player.css';\n\nconst Player = ({ songId }) => {\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [song, setSong] = useState(null);\n\n  useEffect(() => {\n    // Fetch song data including the cover image\n    const fetchSongData = async () => {\n      try {\n        const response = await axios.get(`https://cms.samespace.com/items/songs/${songId}`);\n        setSong(response.data);\n      } catch (error) {\n        console.error('Error fetching the song data:', error);\n      }\n    };\n\n    fetchSongData();\n  }, [songId]);\n\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n\n  const handleTimeUpdate = () => {\n    const currentTime = audioRef.current.currentTime;\n    const duration = audioRef.current.duration;\n    setProgress((currentTime / duration) * 100);\n  };\n\n  const handleSeek = (e) => {\n    const seekTime = (e.target.value / 100) * audioRef.current.duration;\n    audioRef.current.currentTime = seekTime;\n  };\n\n  if (!song) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"player\">\n      <img \n        src={`https://cms.samespace.com/assets/${song.cover}`} \n        alt=\"Album Cover\" \n        className=\"album-cover\" \n      />\n      <div className=\"song-info\">\n        <p>{song.title}</p>\n        <p>{song.artist}</p>\n      </div>\n      <div className=\"player-controls\">\n        <button onClick={togglePlayPause}>\n          {isPlaying ? 'Pause' : 'Play'}\n        </button>\n        <input \n          type=\"range\" \n          value={progress} \n          onChange={handleSeek} \n          className=\"seeker\" \n        />\n      </div>\n      <audio \n        ref={audioRef} \n        onTimeUpdate={handleTimeUpdate} \n        onEnded={() => setIsPlaying(false)}>\n        <source src={`https://cms.samespace.com/assets/${song.audio}`} type=\"audio/mpeg\" />\n        Your browser does not support the audio element.\n      </audio>\n    </div>\n  );\n};\n\nexport default Player;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}