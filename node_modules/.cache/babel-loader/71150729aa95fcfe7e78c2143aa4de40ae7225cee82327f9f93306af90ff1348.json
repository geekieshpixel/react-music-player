{"ast":null,"code":"var _jsxFileName = \"/Users/sakshi/GeekieshPixel Workspace/music-player-ui/music-player-ui/src/components/Player.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Player = ({\n  song\n}) => {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [audioUrl, setAudioUrl] = useState(null);\n  const Player = ({\n    currentSong\n  }) => /*#__PURE__*/_jsxDEV(PlayerWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(CoverImage, {\n      src: `https://cms.samespace.com/assets/${currentSong.cover}`,\n      alt: \"Album cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n  useEffect(() => {\n    const fetchAudioUrl = async () => {\n      try {\n        const response = await axios.get(song.url, {\n          responseType: 'arraybuffer' // Important to get the raw binary data\n        });\n        const blob = new Blob([response.data], {\n          type: 'audio/mpeg'\n        }); // Create a Blob from the data\n        const url = window.URL.createObjectURL(blob); // Generate a URL for the Blob\n        console.clear();\n        console.log(blob, \"hhhhh\");\n        setAudioUrl(url);\n      } catch (error) {\n        console.error('Error fetching the audio file:', error);\n      }\n    };\n    fetchAudioUrl();\n  }, [song.id]);\n  useEffect(() => {\n    if (audioRef.current && audioUrl) {\n      audioRef.current.load();\n      if (isPlaying) {\n        audioRef.current.play();\n      }\n    }\n  }, [audioUrl]);\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      const currentTime = audioRef.current.currentTime;\n      const duration = audioRef.current.duration;\n      setProgress(currentTime / duration * 100);\n    }\n  };\n  const handleSeek = e => {\n    const seekTime = e.target.value / 100 * audioRef.current.duration;\n    audioRef.current.currentTime = seekTime;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: audioUrl ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n        ref: audioRef,\n        onTimeUpdate: handleTimeUpdate,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: audioUrl,\n          type: \"audio/mpeg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this), \"Your browser does not support the audio element.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: togglePlayPause,\n          children: isPlaying ? 'Pause' : 'Play'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          value: progress,\n          onChange: handleSeek,\n          className: \"seeker\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: song.cover,\n          alt: \"Album Cover\",\n          className: \"album-cover\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: song.artist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n};\n_s(Player, \"UHGB6kAiEBd4rZSPuPPuQMCgN7A=\");\n_c = Player;\nexport default Player;\nvar _c;\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"names":["React","useRef","useEffect","useState","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Player","song","_s","audioRef","isPlaying","setIsPlaying","progress","setProgress","audioUrl","setAudioUrl","currentSong","PlayerWrapper","children","CoverImage","src","cover","alt","fileName","_jsxFileName","lineNumber","columnNumber","Controls","fetchAudioUrl","response","get","url","responseType","blob","Blob","data","type","window","URL","createObjectURL","console","clear","log","error","id","current","load","play","togglePlayPause","pause","handleTimeUpdate","currentTime","duration","handleSeek","e","seekTime","target","value","className","ref","onTimeUpdate","onClick","onChange","name","artist","_c","$RefreshReg$"],"sources":["/Users/sakshi/GeekieshPixel Workspace/music-player-ui/music-player-ui/src/components/Player.js"],"sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst Player = ({ song }) => {\n\tconst audioRef = useRef(null);\n\tconst [isPlaying, setIsPlaying] = useState(false);\n\tconst [progress, setProgress] = useState(0);\n\tconst [audioUrl, setAudioUrl] = useState(null);\n\t\n\tconst Player = ({ currentSong }) => (\n\t\t<PlayerWrapper>\n\t\t  <CoverImage src={`https://cms.samespace.com/assets/${currentSong.cover}`} alt=\"Album cover\" />\n\t\t  <Controls>\n\t\t\t{/* Add play/pause/next/previous buttons here */}\n\t\t  </Controls>\n\t\t</PlayerWrapper>\n\t  );\n\n\tuseEffect(() => {\n\t\tconst fetchAudioUrl = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await axios.get(song.url, {\n\t\t\t\t\tresponseType: 'arraybuffer', // Important to get the raw binary data\n\t\t\t\t});\n\n\t\t\t\tconst blob = new Blob([response.data], { type: 'audio/mpeg' }); // Create a Blob from the data\n\t\t\t\tconst url = window.URL.createObjectURL(blob); // Generate a URL for the Blob\n\t\t\t\tconsole.clear();\n\t\t\t\tconsole.log(blob, \"hhhhh\");\n\t\t\t\tsetAudioUrl(url);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('Error fetching the audio file:', error);\n\t\t\t}\n\t\t};\n\n\t\tfetchAudioUrl();\n\t}, [song.id]);\n\n\tuseEffect(() => {\n\t\tif (audioRef.current && audioUrl) {\n\t\t\taudioRef.current.load();\n\t\t\tif (isPlaying) {\n\t\t\t\taudioRef.current.play();\n\t\t\t}\n\t\t}\n\t}, [audioUrl]);\n\n\tconst togglePlayPause = () => {\n\t\tif (isPlaying) {\n\t\t\taudioRef.current.pause();\n\t\t} else {\n\t\t\taudioRef.current.play();\n\t\t}\n\t\tsetIsPlaying(!isPlaying);\n\t};\n\n\tconst handleTimeUpdate = () => {\n\t\tif (audioRef.current) {\n\t\t\tconst currentTime = audioRef.current.currentTime;\n\t\t\tconst duration = audioRef.current.duration;\n\t\t\tsetProgress((currentTime / duration) * 100);\n\t\t}\n\t};\n\n\tconst handleSeek = (e) => {\n\t\tconst seekTime = (e.target.value / 100) * audioRef.current.duration;\n\t\taudioRef.current.currentTime = seekTime;\n\t};\n\n\n\treturn (\n\t\t<div className=\"player\">\n\t\t\t{audioUrl ? (\n\t\t\t\t<>\n\t\t\t\t\t<audio\n\t\t\t\t\t\tref={audioRef}\n\t\t\t\t\t\tonTimeUpdate={handleTimeUpdate}\n\t\t\t\t\t>\n\t\t\t\t\t\t<source src={audioUrl} type=\"audio/mpeg\" />\n\t\t\t\t\t\tYour browser does not support the audio element.\n\t\t\t\t\t</audio>\n\t\t\t\t\t<div className=\"player-controls\">\n\t\t\t\t\t\t<button onClick={togglePlayPause}>\n\t\t\t\t\t\t\t{isPlaying ? 'Pause' : 'Play'}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"range\"\n\t\t\t\t\t\t\tvalue={progress}\n\t\t\t\t\t\t\tonChange={handleSeek}\n\t\t\t\t\t\t\tclassName=\"seeker\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"song-info\">\n\t\t\t\t\t\t<img src={song.cover} alt=\"Album Cover\" className=\"album-cover\" />\n\t\t\t\t\t\t<p>{song.name}</p>\n\t\t\t\t\t\t<p>{song.artist}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</>\n\t\t\t) : (\n\t\t\t\t<p>Loading...</p>\n\t\t\t)}\n\t\t</div>\n\n\n\t);\n};\n\nexport default Player;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}